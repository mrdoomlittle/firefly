-. clean up code
-. work on pixdraw pixcopy pixfill
-. remove some submodules
-. remake object manager
-. remake ffly studio
-. change src/system/flags.c from c to asmbaly
-. work on math functions
-. fpu might not support sqrt so need to make fall back
-. add lookup table for sqrt and other math functions
-. get asla up and running
-. rename graphics/png_loader.c/h to png.c/h same goes for jpeg loader
-. add support for saving images such as png and jpeg
-. clean up and improve task pool
-. allow for functions such as mem_cmp to use task pool to improve speed for large compares
-. need to find out how calulate a size to speed ratio for mem_cpy slice size as fixing it as one size would cause issus for other machines with a slow cpu clock.
-. need to start working on graphics function for 2d and 3d.
-. get opencl working with graphics functions.
-. add fall back to cpu if gpu becomes unavailable or cl library wasn't stated at compile time
-. document shit
-. remove old code
-. add multithreading support for pixdraw/pixfill/etc
-. start adding to errno list
-. cleanup & test shm, system pipe.
-. work on database.
-. allow for vec & buff as a option to be allocated in pages of non contiguous memory.
-. work on terminal,hatch to make debugging easer. this will allow a live view on infomation from within engine
	e.g. memory, opened files, threads etc.
-. remove useless submodules
-. make somthing to parse args from argv main to reduce copy and past
-. clean up const* shit as alot i havent updated and its all loose
-. c++ side might not work as its outofdate and need updating
-. huge improvments need to be made
-. reduce number of syscalls
-. for system/file add out and input buffers to reduce the amount of times write and read are called
-. revise code as lots of shit isent the best way of doing things
-. allocr needs to be improved at the moment i dont care if its using large amount of memory but needs fixing
-. get clock working
-. the compiler needs working on and cleaning up.
-. allow diffrent syntax formats for compiler also get started c-lang and use bci for testing
-. allocr and multithreading needs testing
-. start making headers for uapi 
example:

header.h
{
	make it so when using uapi 
	it descards structures
	and diffrent ones will be put in there place
	struct test {
		mdl_uint_t size;
	};

	struct test{
		mdl_uint_t tst_size;
	};

	# define __uapi
	# include "../header.h"
}
-. everthing is a total mess and lots of work is needed but dont have the necessary time to do so.
-. testing things like object shit might be a problem as we cant use cuda or x11 xcb as it relies on libc
so we will use the terminal until we can get it up and working.
-. work on module malloc
-. db needs testing and improvements need to be made
-. as and bond are a total mess and it needs to be fixed.
-. fix printf as for now ive been using a fixed buffer, change!
-. sending kill signal will cause thread issues 
	if killed inside lock or somthing else - need to fix.

-. pulse, alsa, xcb, x11 require libc so
we will pipe data back for forth using shared memory
until we can do somthing about that.
-. ffly_mem_cpy, ffly_mem_set, etc under 'data' is to be renamed to ff_mem_cpy
-. stack neededs to be alligned to 16 bytes, either allign it on init and keep it alligned
	or allign it before printf calles but the problem might
	pop up when using double precision floats if movaps happens to be used - need to be fixed.

-. c++ crap is out of date <- fix
-. parser and lexer should have own structure
-. fix line counting for compiler
-. replace window frame buffer with somthing less direct
-. start moving c++ namespaces mdl::system to ff:: and also removeing mdl:: for ff::
-. use c++ as the icing and c as the cake
-. find new names for things
-. a lot of security holes a lot! need fixed later as i don't care about it for now
-. fix asm labels and add name infront of each
-. work needs to be done on memory management as /bond/as/etc... are quite bad
and it has to be done at some point, i dont realy care too much about it but its quite a mess.
-. lexer need its own allocator for the allocation of tokens also parser and nodes
-. start work on compactor
-. cleanup script/parser also the management of memory needs to be improved upon
-. system/string.c function should be passed thru as a pram to allocate new segment of memory
else pass the buffer size and error out.
-. start working on assembler as ive been using bci for testing
-. 'bond' and 'as' need to support ELF
-. rename ffef.h
-. work on terrain
-. rename system/task_pool.*
-. cleanup /data
-. get data/scale_pixelmap up and working
-. /crypto add sha, and others to
-. system/util/hash needs better hasher
-. parser needs its own structure
-. mod.c should use call.c
-. two choices make use raw audio connection or remake pulse, alsa librarys else pipe it
-. jpeg and png librarys will have to be remade or user uses the librarys and send the raw pixel data to the engine
-. ffly_alloc_lot should be ffly_lot_alloc
-. as, bond, etc read full file and dumps it into memory,
its quite bad but okay for now but later we will pass a 'get' function pointer thru
to get the next chunk of data
-. cleanup bond, as, ...
-. large number passed thru printf causes nots to loop over and over
-. work on sound as whats going to happen is we are not going to be using 
any librarys as all, soo the user will have pulse and alsa and the engine will be independent
user gives the engine data and it will be stored in a custom format <- for image files.
-. src/system/thread.c clone thread local storage wrong
-. src/ff need memcpy, ...
-. sched entity locking
-. storage/slab cacheing
-. system/vec page cacheing write to storage/reservoir
-. add lot.c to sched and dealloc lots not in use
-. resin/exec pass function to get slice of file at point also chould cache the slices with storage/reservoir
-. as needs more woking on
-. improvments need to be made to allocr
-. rename crucify
-. start working on db multi client
-. work on mod.c
-. obj_pool is thread only and wont use system/sched
say 4 obj pools objects will be added to the one with less latency like system/task_pool 
but objects only
-. terrain loading going to be chunk by chunk
-. src/ff/output/resin
need to 

remove switch statments
and 
op(__compiler, "movb", "%rel", reg, NULL);
op(__compiler, "movw", "%rel", reg, NULL);
op(__compiler, "movd", "%rel", reg, NULL);
op(__compiler, "movq", "%rel", reg, NULL);
-. clock get should be added 
-. remove ffly_nanosleep and reput using nanosleep
-. using elf is inflexible so assembler should output custom
format and elf but bond wont work with elf but the custom format its output will be elf
-. clean up 'compile.sh' files are stuck in the past and need updateing
-. -D__ffly_crucial needs to be added to all 'compile.sh' files as some still dont have it
-. src/system/barrel needs reworking
-. database needs working on
-. BS needs to be added this will work with br
-. ff/output/regin must fix and have it use resin special registers
-. lexer needs to be passed a function pointer to get data and not a pointer to an array of data
-. might be a good idea to rethink and passing of a frame{duct}
-. work on bond to allow for easy implementation for other formats
-. for to_free - pageing linked list ???
-. database,net,etc compare versions
-. buffer/network/write
-. for db and bs and other things that send and recv large chunks of data split it up dont send the full thing
-. daemon change to server i dont care about naming so it happens

-. cleanup locks at currently there only placed to stop errors occurring
and the way thay have be placed in some spots is very inefficient
-. work on the drawing of polygons
-. work on body texture and the colour assignment to polygons
-. replace ((__val>>PAGE_SHIFT)+((__val&((~(ff_u64_t)0)>>(64-PAGE_SHIFT)))>0))
with ((__val+(0xffffffffffffffff>>(64-PAGE_SHIFT)))>>PAGE_SHIFT) its to remove the '>0'
did not realy care about it but needed changing
-. compiler/lexer single chars should be put in a growing stack of memory and should not be allocated thru ffly_mem_alloc
-. src/net needs to be worked on at the moment its temporary
-. go thru asm code and align stack allocations to 16
-. system/string.c have buffer size passed thru if overflow occurred return error 
-. all errors should be detected and then counted if over x amount has occurred over x time then its time to panic
-. need somthing to sit in the middle of sockets and shm pipes 
-. find another way to write to frame buffer - are frame buffer
-. parsing nodes in some places should use a vec and not linked lists not system/vec but its own 
-. compiler type sizes should not include a 'size' var but to get the size function should be called
and size will be retrieved from array by id
-. maps needs to be tested i havent done that so i dont know how good or bad they are 
